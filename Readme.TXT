В этой задаче надо построить оптимальный код Хаффмана.

Код Хаффмана используется при сжатии данных. Символы исходного алфавита кодируются неравномерным двоичным префиксным кодом. Префиксный код – такой код, в котором ни одно кодовое слово не является началом другого кодового слова. Код Хаффмана строится на основе известных вероятностей появления символов исходного алфавита в сообщении. Сумма всех вероятностей должна быть равна единице, массив вероятностей должен быть отсортирован по убыванию. (Но в нашем случае мы обойдемся сортировкой по количеству, по сути это одно и тоже)

Код Хаффмана был предложен аспирантом MIT Дэвидом Хаффманом в 1952 году. Модификации данного кода используются во многих архиваторах (например, PKZIP, LHA) для сжатия данных, а также для сжатия изображений (JPEG, MPEG) и звука (MP3).

Для построения кода Хаффмана используется дерево. Построение начинается с листьев дерева. Количество листьев равно числу разных символов в применяемом алфавите, веса вершин-листьев равны вероятностям появления символов. Задачу решает рекурсивный алгоритм.

Формат ввода
В первой строке - мощность алфавита N (максимум - INT_MAX), то есть количество разных символов в сообщении. 
Во второй строке - N целых положительных чисел - количества появлений каждого символа алфавита в сообщении в порядке убывания, сумма всех символов не превышает INT_MAX.

Формат вывода
Строка с полученными коды символов, разделенными пробелами, расставлены в порядке убывания (по количеству повторений).